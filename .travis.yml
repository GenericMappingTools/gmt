# Configuration file for TravisCI

# Use the container builds so we don't need sudo priviledges
sudo: false

language: c

# Only build pushes to select branches and tags. This avoids the double
# builds than happen when working on a branch instead of a fork.
branches:
    only:
        - master
        - 5.4
        # Regex to build tagged commits with version numbers
        - /\d+\.\d+(\.\d+)?(\S*)?$/

os:
    - linux
    #- osx

# Set the Ubuntu version for the Linux builds
dist: xenial

# Dependencies for the Linux and OSX builds
addons:
    apt:
        packages:
            - cmake
            - build-essential
            - libcurl4-gnutls-dev
            - libnetcdf-dev
            - libgdal1-dev
            - libfftw3-dev
            - libpcre3-dev
            - liblapack-dev
            - ghostscript
            - curl
            - graphicsmagick
            - python
            - python-pip
    #homebrew:
        #packages:
            #- cmake
            #- curl
            #- netcdf
            #- gdal
            #- fftw
            #- pcre2
            #- ghostscript
            #- curl
            #- graphicsmagick
            #- python

# Define environment variables common to all builds
env:
    global:
        - INSTALLDIR="$HOME/gmt-install-dir"
        - COASTLINEDIR="$HOME/gmt-install-dir/coast"
        - PATH="$INSTALLDIR/bin:$PATH"
        - LD_LIBRARY_PATH="$INSTALLDIR/lib:$LD_LIBRARY_PATH"
        - COVERAGE=true
        - if [ "$TRAVIS_EVENT_TYPE" == "cron" ] && [ "$TRAVIS_OS_NAME" == "linux" ]; then
            export BUILD_DOCS=true;
            export TEST_ALL=true;
          else
            export BUILD_DOCS=false;
            export TEST_ALL=false;
          fi
        - BUILD_DOCS=true

# Setup the build environment
before_install:
    - mkdir "$INSTALLDIR"
    - mkdir "$COASTLINEDIR"
    - bash ci/download-coastlines.sh
    # Install GMT documentation dependencies
    - if [ "$BUILD_DOCS" == "true" ]; then
        pip install --user sphinx;
      fi

# Install the package that we want to test
install:
    # Build and install GMT
    - bash ci/build-gmt.sh;

# Run the actual tests and checks
script:
    - gmt defaults -Vd
    - gmt pscoast -R0/10/0/10 -JM6i -Ba -Ggray -P -Vd > test.ps
    - cd build
    - if [ "$BUILD_DOCS" == "true" ]; then
        make -j docs_html;
      fi
    - if [ "$TEST_ALL" == "true" ]; then
        make -j check;
      fi
    - cd ..

# Things to do if the build is successful
after_success:
    - if [ "$TEST_ALL" == "true" ]; then
        bash <(curl -s https://codecov.io/bash);
      fi

notifications:
    email: false
