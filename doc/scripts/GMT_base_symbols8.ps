%!PS-Adobe-3.0
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0 0 612.0000 792.0000             
%%Title: GMT v6.2.0_7e70ddf_2020.08.08 [64-bit] Document from psxy
%%Creator: GMT6
%%For: unknown
%%DocumentNeededResources: font Helvetica
%%CreationDate: Sat Aug  8 13:56:33 2020
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 1
%%EndComments

%%BeginProlog
250 dict begin
/! {bind def} bind def
/# {load def}!
/A /setgray #
/B /setdash #
/C /setrgbcolor #
/D /rlineto #
/E {dup stringwidth pop}!
/F /fill #
/G /rmoveto #
/H /sethsbcolor #
/I /setpattern #
/K /setcmykcolor #
/L /lineto #
/M /moveto #
/N /newpath #
/P /closepath #
/R /rotate #
/S /stroke #
/T /translate #
/U /grestore #
/V /gsave #
/W /setlinewidth #
/Y {findfont exch scalefont setfont}!
/Z /show #
/FP {true charpath flattenpath}!
/MU {matrix setmatrix}!
/MS {/SMat matrix currentmatrix def}!
/MR {SMat setmatrix}!
/edef {exch def}!
/FS {/fc edef /fs {V fc F U} def}!
/FQ {/fs {} def}!
/O0 {/os {N} def}!
/O1 {/os {P S} def}!
/FO {fs os}!
/Sa {M MS dup 0 exch G 0.726542528 mul -72 R dup 0 D 4 {72 R dup 0 D -144 R dup 0 D} repeat pop MR FO}!
/Sb {M dup 0 D exch 0 exch D neg 0 D FO}!
/SB {MS T /BoxR edef /BoxW edef /BoxH edef BoxR 0 M
  BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct MR FO}!
/Sc {N 3 -1 roll 0 360 arc FO}!
/Sd {M 4 {dup} repeat 0 G neg dup dup D exch D D FO}!
/Se {N MS T R scale 0 0 1 0 360 arc MR FO}!
/Sg {M MS 22.5 R dup 0 exch G -22.5 R 0.765366865 mul dup 0 D 6 {-45 R dup 0 D} repeat pop MR FO}!
/Sh {M MS dup 0 G -120 R dup 0 D 4 {-60 R dup 0 D} repeat pop MR FO}!
/Si {M MS dup neg 0 exch G 60 R 1.732050808 mul dup 0 D 120 R 0 D MR FO}!
/Sj {M MS R dup -2 div 2 index -2 div G dup 0 D exch 0 exch D neg 0 D MR FO}!
/Sn {M MS dup 0 exch G -36 R 1.175570505 mul dup 0 D 3 {-72 R dup 0 D} repeat pop MR FO}!
/Sp {N 3 -1 roll 0 360 arc fs N}!
/SP {M {D} repeat FO}!
/Sr {M dup -2 div 2 index -2 div G dup 0 D exch 0 exch D neg 0 D FO}!
/SR {MS T /BoxR edef /BoxW edef /BoxH edef BoxR BoxW -2 div BoxH -2 div T BoxR 0 M
  BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct MR FO}!
/Ss {M 1.414213562 mul dup dup dup -2 div dup G 0 D 0 exch D neg 0 D FO}!
/St {M MS dup 0 exch G -60 R 1.732050808 mul dup 0 D -120 R 0 D MR FO}!
/SV {0 exch M 0 D D D D D 0 D FO}!
/Sv {0 0 M D D 0 D D D D D 0 D D FO}!
/Sw {2 copy M 5 2 roll arc FO}!
/Sx {M 1.414213562 mul 5 {dup} repeat -2 div dup G D neg 0 G neg D S}!
/Sy {M dup 0 exch G dup -2 mul dup 0 exch D S}!
/S+ {M dup 0 G dup -2 mul dup 0 D exch dup G 0 exch D S}!
/S- {M dup 0 G dup -2 mul dup 0 D S}!
/sw {stringwidth pop}!
/sh {V MU 0 0 M FP pathbbox N 4 1 roll pop pop pop U}!
/sd {V MU 0 0 M FP pathbbox N pop pop exch pop U}!
/sH {V MU 0 0 M FP pathbbox N exch pop exch sub exch pop U}!
/sb {E exch sh}!
/bl {}!
/bc {E -2 div 0 G}!
/br {E neg 0 G}!
/ml {dup 0 exch sh -2 div G}!
/mc {dup E -2 div exch sh -2 div G}!
/mr {dup E neg exch sh -2 div G}!
/tl {dup 0 exch sh neg G}!
/tc {dup E -2 div exch sh neg G}!
/tr {dup E neg exch sh neg G}!
/mx {2 copy lt {exch} if pop}!
/PSL_xorig 0 def /PSL_yorig 0 def
/TM {2 copy T PSL_yorig add /PSL_yorig edef PSL_xorig add /PSL_xorig edef}!
/PSL_reencode {findfont dup length dict begin
  {1 index /FID ne {def}{pop pop} ifelse} forall
  exch /Encoding edef currentdict end definefont pop
}!
/PSL_eps_begin {
  /PSL_eps_state save def
  /PSL_dict_count countdictstack def
  /PSL_op_count count 1 sub def
  userdict begin
  /showpage {} def
  0 setgray 0 setlinecap 1 setlinewidth
  0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
  /languagelevel where
  {pop languagelevel 1 ne {false setstrokeadjust false setoverprint} if} if
}!
/PSL_eps_end {
  count PSL_op_count sub {pop} repeat
  countdictstack PSL_dict_count sub {end} repeat
  PSL_eps_state restore
}!
/PSL_transp {
  /.setopacityalpha where {pop .setblendmode .setopacityalpha}{
  /pdfmark where {pop [ /BM exch /CA exch dup /ca exch /SetTransparency pdfmark}
  {pop pop} ifelse} ifelse
}!
/ISOLatin1+_Encoding [
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/bullet		/ellipsis	/trademark	/emdash		/endash		/fi		/zcaron
/space		/exclam		/quotedbl	/numbersign	/dollar		/percent	/ampersand	/quoteright
/parenleft	/parenright	/asterisk	/plus		/comma		/minus		/period		/slash
/zero		/one		/two		/three		/four		/five		/six		/seven
/eight		/nine		/colon		/semicolon	/less		/equal		/greater	/question
/at		/A		/B		/C		/D		/E		/F		/G
/H		/I		/J		/K		/L		/M		/N		/O
/P		/Q		/R		/S		/T		/U		/V		/W
/X		/Y		/Z		/bracketleft	/backslash	/bracketright	/asciicircum	/underscore
/quoteleft	/a		/b		/c 		/d		/e		/f		/g
/h		/i		/j		/k		/l		/m		/n		/o
/p		/q		/r		/s		/t		/u		/v		/w
/x		/y		/z		/braceleft	/bar		/braceright	/asciitilde	/scaron
/OE		/dagger		/daggerdbl	/Lslash		/fraction	/guilsinglleft	/Scaron		/guilsinglright
/oe		/Ydieresis	/Zcaron		/lslash		/perthousand	/quotedblbase	/quotedblleft	/quotedblright
/dotlessi	/grave		/acute		/circumflex	/tilde		/macron		/breve		/dotaccent
/dieresis	/quotesinglbase	/ring		/cedilla	/quotesingle	/hungarumlaut	/ogonek		/caron
/space		/exclamdown	/cent		/sterling	/currency	/yen		/brokenbar	/section
/dieresis	/copyright	/ordfeminine	/guillemotleft	/logicalnot	/hyphen		/registered	/macron
/degree		/plusminus	/twosuperior	/threesuperior	/acute		/mu		/paragraph	/periodcentered
/cedilla	/onesuperior	/ordmasculine	/guillemotright	/onequarter	/onehalf	/threequarters	/questiondown
/Agrave		/Aacute		/Acircumflex	/Atilde		/Adieresis	/Aring		/AE		/Ccedilla
/Egrave		/Eacute		/Ecircumflex	/Edieresis	/Igrave		/Iacute		/Icircumflex	/Idieresis
/Eth		/Ntilde		/Ograve		/Oacute		/Ocircumflex	/Otilde		/Odieresis	/multiply
/Oslash		/Ugrave		/Uacute		/Ucircumflex	/Udieresis	/Yacute		/Thorn		/germandbls
/agrave		/aacute		/acircumflex	/atilde		/adieresis	/aring		/ae		/ccedilla
/egrave		/eacute		/ecircumflex	/edieresis	/igrave		/iacute		/icircumflex	/idieresis
/eth		/ntilde		/ograve		/oacute		/ocircumflex	/otilde		/odieresis	/divide
/oslash		/ugrave		/uacute		/ucircumflex	/udieresis	/yacute		/thorn		/ydieresis
] def
/PSL_font_encode 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 array astore def
/F0 {/Helvetica Y}!
/F1 {/Helvetica-Bold Y}!
/F2 {/Helvetica-Oblique Y}!
/F3 {/Helvetica-BoldOblique Y}!
/F4 {/Times-Roman Y}!
/F5 {/Times-Bold Y}!
/F6 {/Times-Italic Y}!
/F7 {/Times-BoldItalic Y}!
/F8 {/Courier Y}!
/F9 {/Courier-Bold Y}!
/F10 {/Courier-Oblique Y}!
/F11 {/Courier-BoldOblique Y}!
/F12 {/Symbol Y}!
/F13 {/AvantGarde-Book Y}!
/F14 {/AvantGarde-BookOblique Y}!
/F15 {/AvantGarde-Demi Y}!
/F16 {/AvantGarde-DemiOblique Y}!
/F17 {/Bookman-Demi Y}!
/F18 {/Bookman-DemiItalic Y}!
/F19 {/Bookman-Light Y}!
/F20 {/Bookman-LightItalic Y}!
/F21 {/Helvetica-Narrow Y}!
/F22 {/Helvetica-Narrow-Bold Y}!
/F23 {/Helvetica-Narrow-Oblique Y}!
/F24 {/Helvetica-Narrow-BoldOblique Y}!
/F25 {/NewCenturySchlbk-Roman Y}!
/F26 {/NewCenturySchlbk-Italic Y}!
/F27 {/NewCenturySchlbk-Bold Y}!
/F28 {/NewCenturySchlbk-BoldItalic Y}!
/F29 {/Palatino-Roman Y}!
/F30 {/Palatino-Italic Y}!
/F31 {/Palatino-Bold Y}!
/F32 {/Palatino-BoldItalic Y}!
/F33 {/ZapfChancery-MediumItalic Y}!
/F34 {/ZapfDingbats Y}!
/F35 {/Ryumin-Light-EUC-H Y}!
/F36 {/Ryumin-Light-EUC-V Y}!
/F37 {/GothicBBB-Medium-EUC-H Y}!
/F38 {/GothicBBB-Medium-EUC-V Y}!
/PSL_pathtextdict 26 dict def
/PSL_pathtext
  {PSL_pathtextdict begin
    /ydepth exch def
    /textheight exch def
    /just exch def
    /offset exch def
    /str exch def
    /pathdist 0 def
    /setdist offset def
    /charcount 0 def
    /justy just 4 idiv textheight mul 2 div neg ydepth sub def
    V flattenpath
	{movetoproc} {linetoproc}
	{curvetoproc} {closepathproc}
	pathforall
    U N
    end
  } def
PSL_pathtextdict begin
/movetoproc
  { /newy exch def /newx exch def
    /firstx newx def /firsty newy def
    /ovr 0 def
    newx newy transform
    /cpy exch def /cpx exch def
  } def
/linetoproc
  { /oldx newx def /oldy newy def
    /newy exch def /newx exch def
    /dx newx oldx sub def
    /dy newy oldy sub def
    /dist dx dup mul dy dup mul add sqrt def
    dist 0 ne
    { /dsx dx dist div ovr mul def
      /dsy dy dist div ovr mul def
      oldx dsx add oldy dsy add transform
      /cpy exch def /cpx exch def
      /pathdist pathdist dist add def
      {setdist pathdist le
	  {charcount str length lt
	      {setchar} {exit} ifelse}
	  { /ovr setdist pathdist sub def
	    exit}
	  ifelse
      } loop
    } if
  } def
/curvetoproc
  { (ERROR: No curveto's after flattenpath!)
    print
  } def
/closepathproc
  {firstx firsty linetoproc
    firstx firsty movetoproc
  } def
/setchar
  { /char str charcount 1 getinterval def
    /charcount charcount 1 add def
    /charwidth char stringwidth pop def
    V cpx cpy itransform T
      dy dx atan R
      0 justy M
      char show
      0 justy neg G
      currentpoint transform
      /cpy exch def /cpx exch def
    U /setdist setdist charwidth add def
  } def
end
/PSL_set_label_heights
{
  /PSL_n_labels_minus_1 PSL_n_labels 1 sub def
  /PSL_heights PSL_n_labels array def
  0 1 PSL_n_labels_minus_1
  { /psl_k exch def
    /psl_label PSL_label_str psl_k get def
    PSL_label_font psl_k get cvx exec
    psl_label sH /PSL_height edef
    PSL_heights psl_k PSL_height put
  } for
} def
/PSL_curved_path_labels
{ /psl_bits exch def
  /PSL_placetext psl_bits 2 and 2 eq def
  /PSL_clippath psl_bits 4 and 4 eq def
  /PSL_strokeline false def
  /PSL_fillbox psl_bits 128 and 128 eq def
  /PSL_drawbox psl_bits 256 and 256 eq def
  /PSL_n_paths1 PSL_n_paths 1 sub def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  PSL_clippath {clipsave N clippath} if
  /psl_k 0 def
  /psl_p 0 def
  0 1 PSL_n_paths1
  { /psl_kk exch def
    /PSL_n PSL_path_n  psl_kk get def
    /PSL_m PSL_label_n psl_kk get def
    /PSL_x PSL_path_x psl_k PSL_n getinterval def
    /PSL_y PSL_path_y psl_k PSL_n getinterval def
    /PSL_node_tmp PSL_label_node psl_p PSL_m getinterval def
    /PSL_angle_tmp PSL_label_angle psl_p PSL_m getinterval def
    /PSL_str_tmp PSL_label_str psl_p PSL_m getinterval def
    /PSL_fnt_tmp PSL_label_font psl_p PSL_m getinterval def
    PSL_curved_path_label
    /psl_k psl_k PSL_n add def
    /psl_p psl_p PSL_m add def
  } for
  PSL_clippath {PSL_eoclip} if N
} def
/PSL_curved_path_label
{
  /PSL_n1 PSL_n 1 sub def
  /PSL_m1 PSL_m 1 sub def
  PSL_CT_calcstringwidth
  PSL_CT_calclinedist
  PSL_CT_excludelabels
  PSL_CT_addcutpoints
  /PSL_nn1 PSL_nn 1 sub def
  /n 0 def
  /k 0 def
  /j 0 def
  /PSL_seg 0 def
  /PSL_xp PSL_nn array def
  /PSL_yp PSL_nn array def
  PSL_xp 0 PSL_xx 0 get put
  PSL_yp 0 PSL_yy 0 get put
  1 1 PSL_nn1
  { /i exch def
    /node_type PSL_kind i get def
    /j j 1 add def
    PSL_xp j PSL_xx i get put
    PSL_yp j PSL_yy i get put
    node_type 1 eq
    {n 0 eq
      {PSL_CT_drawline}
      {	PSL_CT_reversepath
	PSL_CT_textline} ifelse
      /j 0 def
      PSL_xp j PSL_xx i get put
      PSL_yp j PSL_yy i get put
    } if
  } for
  n 0 eq {PSL_CT_drawline} if
} def
/PSL_CT_textline
{ PSL_fnt k get cvx exec
  /PSL_height PSL_heights k get def
  PSL_placetext	{PSL_CT_placelabel} if
  PSL_clippath {PSL_CT_clippath} if
  /n 0 def /k k 1 add def
} def
/PSL_CT_calcstringwidth
{ /PSL_width_tmp PSL_m array def
  0 1 PSL_m1
  { /i exch def
    PSL_fnt_tmp i get cvx exec
    PSL_width_tmp i PSL_str_tmp i get stringwidth pop put
  } for
} def
/PSL_CT_calclinedist
{ /PSL_newx PSL_x 0 get def
  /PSL_newy PSL_y 0 get def
  /dist 0.0 def
  /PSL_dist PSL_n array def
  PSL_dist 0 0.0 put
  1 1 PSL_n1
  { /i exch def
    /PSL_oldx PSL_newx def
    /PSL_oldy PSL_newy def
    /PSL_newx PSL_x i get def
    /PSL_newy PSL_y i get def
    /dx PSL_newx PSL_oldx sub def
    /dy PSL_newy PSL_oldy sub def
    /dist dist dx dx mul dy dy mul add sqrt add def
    PSL_dist i dist put
  } for
} def
/PSL_CT_excludelabels
{ /k 0 def
  /PSL_width PSL_m array def
  /PSL_angle PSL_m array def
  /PSL_node PSL_m array def
  /PSL_str PSL_m array def
  /PSL_fnt PSL_m array def
  /lastdist PSL_dist PSL_n1 get def
  0 1 PSL_m1
  { /i exch def
    /dist PSL_dist PSL_node_tmp i get get def
    /halfwidth PSL_width_tmp i get 2 div PSL_gap_x add def
    /L_dist dist halfwidth sub def
    /R_dist dist halfwidth add def
    L_dist 0 gt R_dist lastdist lt and
    {
      PSL_width k PSL_width_tmp i get put
      PSL_node k PSL_node_tmp i get put
      PSL_angle k PSL_angle_tmp i get put
      PSL_str k PSL_str_tmp i get put
      PSL_fnt k PSL_fnt_tmp i get put
      /k k 1 add def
    } if
  } for
  /PSL_m k def
  /PSL_m1 PSL_m 1 sub def
} def
/PSL_CT_addcutpoints
{ /k 0 def
  /PSL_nc PSL_m 2 mul 1 add def
  /PSL_cuts PSL_nc array def
  /PSL_nc1 PSL_nc 1 sub def
  0 1 PSL_m1
  { /i exch def
    /dist PSL_dist PSL_node i get get def
    /halfwidth PSL_width i get 2 div PSL_gap_x add def
    PSL_cuts k dist halfwidth sub put
    /k k 1 add def
    PSL_cuts k dist halfwidth add put
    /k k 1 add def
  } for
  PSL_cuts k 100000.0 put
  /PSL_nn PSL_n PSL_m 2 mul add def
  /PSL_xx PSL_nn array def
  /PSL_yy PSL_nn array def
  /PSL_kind PSL_nn array def
  /j 0 def
  /k 0 def
  /dist 0.0 def
  0 1 PSL_n1
  { /i exch def
    /last_dist dist def
    /dist PSL_dist i get def
    k 1 PSL_nc1
    { /kk exch def
      /this_cut PSL_cuts kk get def
      dist this_cut gt
      { /ds dist last_dist sub def
	/f ds 0.0 eq {0.0} {dist this_cut sub ds div} ifelse def
	/i1 i 0 eq {0} {i 1 sub} ifelse def
	PSL_xx j PSL_x i get dup PSL_x i1 get sub f mul sub put
	PSL_yy j PSL_y i get dup PSL_y i1 get sub f mul sub put
	PSL_kind j 1 put
	/j j 1 add def
	/k k 1 add def
      } if
    } for
    dist PSL_cuts k get le
    {PSL_xx j PSL_x i get put PSL_yy j PSL_y i get put
      PSL_kind j 0 put
      /j j 1 add def
    } if
  } for
} def
/PSL_CT_reversepath
{PSL_xp j get PSL_xp 0 get lt
  {0 1 j 2 idiv
    { /left exch def
      /right j left sub def
      /tmp PSL_xp left get def
      PSL_xp left PSL_xp right get put
      PSL_xp right tmp put
      /tmp PSL_yp left get def
      PSL_yp left PSL_yp right get put
      PSL_yp right tmp put
    } for
  } if
} def
/PSL_CT_placelabel
{
  /PSL_just PSL_label_justify k get def
  /PSL_height PSL_heights k get def
  /psl_label PSL_str k get def
  /psl_depth psl_label sd def
  PSL_usebox
  {PSL_CT_clippath
    PSL_fillbox
    {V PSL_setboxrgb fill U} if
    PSL_drawbox
    {V PSL_setboxpen S U} if N
  } if
  PSL_CT_placeline psl_label PSL_gap_x PSL_just PSL_height psl_depth PSL_pathtext
} def
/PSL_CT_clippath
{
  /H PSL_height 2 div PSL_gap_y add def
  /xoff j 1 add array def
  /yoff j 1 add array def
  /angle 0 def
  0 1 j {
    /ii exch def
    /x PSL_xp ii get def
    /y PSL_yp ii get def
    ii 0 eq {
      /x1 PSL_xp 1 get def
      /y1 PSL_yp 1 get def
      /dx x1 x sub def
      /dy y1 y sub def
    }
    { /i1 ii 1 sub def
      /x1 PSL_xp i1 get def
      /y1 PSL_yp i1 get def
      /dx x x1 sub def
      /dy y y1 sub def
    } ifelse
    dx 0.0 eq dy 0.0 eq and not
    { /angle dy dx atan 90 add def} if
    /sina angle sin def
    /cosa angle cos def
    xoff ii H cosa mul put
    yoff ii H sina mul put
  } for
  PSL_xp 0 get xoff 0 get add PSL_yp 0 get yoff 0 get add M
  1 1 j {
    /ii exch def
    PSL_xp ii get xoff ii get add PSL_yp ii get yoff ii get add L
  } for
  j -1 0 {
    /ii exch def
    PSL_xp ii get xoff ii get sub PSL_yp ii get yoff ii get sub L
  } for P
} def
/PSL_CT_drawline
{
  /str 20 string def
  PSL_strokeline
  {PSL_CT_placeline S} if
  /PSL_seg PSL_seg 1 add def
  /n 1 def
} def
/PSL_CT_placeline
{PSL_xp 0 get PSL_yp 0 get M
  1 1 j { /ii exch def PSL_xp ii get PSL_yp ii get L} for
} def
/PSL_draw_path_lines
{
  /PSL_n_paths1 PSL_n_paths 1 sub def
  V
  /psl_start 0 def
  0 1 PSL_n_paths1
  { /psl_k exch def
    /PSL_n PSL_path_n psl_k get def
    /PSL_n1 PSL_n 1 sub def
    PSL_path_pen psl_k get cvx exec
    N
    PSL_path_x psl_start get PSL_path_y psl_start get M
    1 1 PSL_n1
    { /psl_i exch def
      /psl_kk psl_i psl_start add def
      PSL_path_x psl_kk get PSL_path_y psl_kk get L
    } for
    /psl_xclose PSL_path_x psl_kk get PSL_path_x psl_start get sub def
    /psl_yclose PSL_path_y psl_kk get PSL_path_y psl_start get sub def
    psl_xclose 0 eq psl_yclose 0 eq and { P } if
    S
    /psl_start psl_start PSL_n add def
  } for
  U
} def
/PSL_straight_path_labels
{
  /psl_bits exch def
  /PSL_placetext psl_bits 2 and 2 eq def
  /PSL_rounded psl_bits 32 and 32 eq def
  /PSL_fillbox psl_bits 128 and 128 eq def
  /PSL_drawbox psl_bits 256 and 256 eq def
  /PSL_n_labels_minus_1 PSL_n_labels 1 sub def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  0 1 PSL_n_labels_minus_1
  { /psl_k exch def
    PSL_ST_prepare_text
    PSL_usebox
    {  PSL_rounded
        {PSL_ST_textbox_round}
        {PSL_ST_textbox_rect}
      ifelse
      PSL_fillbox {V PSL_setboxrgb fill U} if
      PSL_drawbox {V PSL_setboxpen S U} if
      N
    } if
    PSL_placetext {PSL_ST_place_label} if
  } for
} def
/PSL_straight_path_clip
{
  /psl_bits exch def
  /PSL_rounded psl_bits 32 and 32 eq def
  /PSL_n_labels_minus_1 PSL_n_labels 1 sub def
  N clipsave clippath
  0 1 PSL_n_labels_minus_1
  { /psl_k exch def
    PSL_ST_prepare_text
    PSL_rounded
      {PSL_ST_textbox_round}
      {PSL_ST_textbox_rect}
    ifelse
  } for
  PSL_eoclip N
} def
/PSL_ST_prepare_text
{
  /psl_xp PSL_txt_x psl_k get def
  /psl_yp PSL_txt_y psl_k get def
  /psl_label PSL_label_str psl_k get def
  PSL_label_font psl_k get cvx exec
  /PSL_height PSL_heights psl_k get def
  /psl_boxH PSL_height PSL_gap_y 2 mul add def
  /PSL_just PSL_label_justify psl_k get def
  /PSL_justx PSL_just 4 mod 1 sub 2 div neg def
  /PSL_justy PSL_just 4 idiv 2 div neg def
  /psl_SW psl_label stringwidth pop def
  /psl_boxW psl_SW PSL_gap_x 2 mul add def
  /psl_x0 psl_SW PSL_justx mul def
  /psl_y0 PSL_justy PSL_height mul def
  /psl_angle PSL_label_angle psl_k get def
} def
/PSL_ST_textbox_rect
{
  psl_xp psl_yp T psl_angle R psl_x0 psl_y0 T
  PSL_gap_x neg PSL_gap_y neg M
  0 psl_boxH D psl_boxW 0 D 0 psl_boxH neg D P
  psl_x0 neg psl_y0 neg T psl_angle neg R psl_xp neg psl_yp neg T
} def
/PSL_ST_textbox_round
{
  /psl_BoxR PSL_gap_x PSL_gap_y lt {PSL_gap_x} {PSL_gap_y} ifelse def
  /psl_xd PSL_gap_x psl_BoxR sub def
  /psl_yd PSL_gap_y psl_BoxR sub def
  /psl_xL PSL_gap_x neg def
  /psl_yB PSL_gap_y neg def
  /psl_yT psl_boxH psl_yB add def
  /psl_H2 PSL_height psl_yd 2 mul add def
  /psl_W2 psl_SW psl_xd 2 mul add def
  /psl_xR psl_xL psl_boxW add def
  /psl_x0 psl_SW PSL_justx mul def
  psl_xp psl_yp T psl_angle R psl_x0 psl_y0 T
  psl_xL psl_yd M
  psl_xL psl_yT psl_xR psl_yT psl_BoxR arct psl_W2 0 D
  psl_xR psl_yT psl_xR psl_yB psl_BoxR arct 0 psl_H2 neg D
  psl_xR psl_yB psl_xL psl_yB psl_BoxR arct psl_W2 neg 0 D
  psl_xL psl_yB psl_xL psl_yd psl_BoxR arct P
  psl_x0 neg psl_y0 neg T psl_angle neg R psl_xp neg psl_yp neg T
} def
/PSL_ST_place_label
{
    V psl_xp psl_yp T psl_angle R
    psl_SW PSL_justx mul psl_y0 M
    psl_label dup sd neg 0 exch G show
    U
} def
/PSL_nclip 0 def
/PSL_clip {clip /PSL_nclip PSL_nclip 1 add def} def
/PSL_eoclip {eoclip /PSL_nclip PSL_nclip 1 add def} def
/PSL_cliprestore {cliprestore /PSL_nclip PSL_nclip 1 sub def} def
%%EndProlog

%%BeginSetup
/PSLevel /languagelevel where {pop languagelevel} {1} ifelse def
PSLevel 1 gt { << /WhiteIsOpaque true >> setpagedevice } if
PSLevel 1 gt { << /PageSize [612 792] /ImagingBBox null >> setpagedevice } if
%%EndSetup

%%Page: 1 1

%%BeginPageSetup
V 0.06 0.06 scale
%%EndPageSetup

/PSL_page_xsize 10200 def
/PSL_page_ysize 13200 def
/PSL_plot_completion {} def
/PSL_movie_label_completion {} def
/PSL_movie_prog_indicator_completion {} def
1 setlinecap
%PSL_End_Header
gsave
0 A
FQ
O0
1200 1200 TM

% PostScript produced by:
%@GMT: gmt psxy -R0/360/-10/10 -JM6i -P -W2.5p,6_4:0 '-Sqn4:+lwiggly line+v+f12p,Times-Roman,red' t.txt --PS_LINE_CAP=round
%@PROJ: merc 0.00000000 360.00000000 -10.00000000 10.00000000 -20037508.343 20037508.343 -1111475.103 1111475.103 +proj=merc +lon_0=180 +k=1 +x_0=0 +y_0=0 +units=m +a=6378137.000 +b=6356752.314 +ellps=WGS84 +datum=WGS84 +units=m +no_defs
%GMTBoundingBox: 72 72 432 23.9629217475
%%BeginObject PSL_Layer_1
1 setlinecap
0 setlinejoin
3.32550952342 setmiterlimit
clipsave
0 0 M
7200 0 D
0 399 D
-7200 0 D
P
PSL_clip N
PSL_cliprestore
V
PSL_font_encode 4 get 0 eq {ISOLatin1+_Encoding /Times-Roman /Times-Roman PSL_reencode PSL_font_encode 4 1 put} if
1 0 0 C
/PSL_setboxpen {4 W 0 A [] 0 B} def
/PSL_setboxrgb {1 A} def
/PSL_path_pen [
	(42 W 0 A \[100 67\] 0 B)
] def
/PSL_label_justify [ 6 6 6 6 ] def
/PSL_label_font [
	(1 0 0 C 200 F4)
	(1 0 0 C 200 F4)
	(1 0 0 C 200 F4)
	(1 0 0 C 200 F4)
] def
/PSL_gap_x 30 def
/PSL_gap_y 30 def
/PSL_path_x [ 0 10 20 30 40 50 60 70 80 90 
	100 110 120 130 140 150 160 170 180 190 
	200 210 220 230 240 250 260 270 280 290 
	300 310 320 330 340 350 360 370 380 390 
	400 410 420 430 440 450 460 470 480 490 
	500 510 520 530 540 550 560 570 580 590 
	600 610 620 630 640 650 660 670 680 690 
	700 710 720 730 740 750 760 770 780 790 
	800 810 820 830 840 850 860 870 880 890 
	900 910 920 930 940 950 960 970 980 990 
	1000 1010 1020 1030 1040 1050 1060 1070 1080 1090 
	1100 1110 1120 1130 1140 1150 1160 1170 1180 1190 
	1200 1210 1220 1230 1240 1250 1260 1270 1280 1290 
	1300 1310 1320 1330 1340 1350 1360 1370 1380 1390 
	1400 1410 1420 1430 1440 1450 1460 1470 1480 1490 
	1500 1510 1520 1530 1540 1550 1560 1570 1580 1590 
	1600 1610 1620 1630 1640 1650 1660 1670 1680 1690 
	1700 1710 1720 1730 1740 1750 1760 1770 1780 1790 
	1800 1810 1820 1830 1840 1850 1860 1870 1880 1890 
	1900 1910 1920 1930 1940 1950 1960 1970 1980 1990 
	2000 2010 2020 2030 2040 2050 2060 2070 2080 2090 
	2100 2110 2120 2130 2140 2150 2160 2170 2180 2190 
	2200 2210 2220 2230 2240 2250 2260 2270 2280 2290 
	2300 2310 2320 2330 2340 2350 2360 2370 2380 2390 
	2400 2410 2420 2430 2440 2450 2460 2470 2480 2490 
	2500 2510 2520 2530 2540 2550 2560 2570 2580 2590 
	2600 2610 2620 2630 2640 2650 2660 2670 2680 2690 
	2700 2710 2720 2730 2740 2750 2760 2770 2780 2790 
	2800 2810 2820 2830 2840 2850 2860 2870 2880 2890 
	2900 2910 2920 2930 2940 2950 2960 2970 2980 2990 
	3000 3010 3020 3030 3040 3050 3060 3070 3080 3090 
	3100 3110 3120 3130 3140 3150 3160 3170 3180 3190 
	3200 3210 3220 3230 3240 3250 3260 3270 3280 3290 
	3300 3310 3320 3330 3340 3350 3360 3370 3380 3390 
	3400 3410 3420 3430 3440 3450 3460 3470 3480 3490 
	3500 3510 3520 3530 3540 3550 3560 3570 3580 3590 
	3600 3610 3620 3630 3640 3650 3660 3670 3680 3690 
	3700 3710 3720 3730 3740 3750 3760 3770 3780 3790 
	3800 3810 3820 3830 3840 3850 3860 3870 3880 3890 
	3900 3910 3920 3930 3940 3950 3960 3970 3980 3990 
	4000 4010 4020 4030 4040 4050 4060 4070 4080 4090 
	4100 4110 4120 4130 4140 4150 4160 4170 4180 4190 
	4200 4210 4220 4230 4240 4250 4260 4270 4280 4290 
	4300 4310 4320 4330 4340 4350 4360 4370 4380 4390 
	4400 4410 4420 4430 4440 4450 4460 4470 4480 4490 
	4500 4510 4520 4530 4540 4550 4560 4570 4580 4590 
	4600 4610 4620 4630 4640 4650 4660 4670 4680 4690 
	4700 4710 4720 4730 4740 4750 4760 4770 4780 4790 
	4800 4810 4820 4830 4840 4850 4860 4870 4880 4890 
	4900 4910 4920 4930 4940 4950 4960 4970 4980 4990 
	5000 5010 5020 5030 5040 5050 5060 5070 5080 5090 
	5100 5110 5120 5130 5140 5150 5160 5170 5180 5190 
	5200 5210 5220 5230 5240 5250 5260 5270 5280 5290 
	5300 5310 5320 5330 5340 5350 5360 5370 5380 5390 
	5400 5410 5420 5430 5440 5450 5460 5470 5480 5490 
	5500 5510 5520 5530 5540 5550 5560 5570 5580 5590 
	5600 5610 5620 5630 5640 5650 5660 5670 5680 5690 
	5700 5710 5720 5730 5740 5750 5760 5770 5780 5790 
	5800 5810 5820 5830 5840 5850 5860 5870 5880 5890 
	5900 5910 5920 5930 5940 5950 5960 5970 5980 5990 
	6000 6010 6020 6030 6040 6050 6060 6070 6080 6090 
	6100 6110 6120 6130 6140 6150 6160 6170 6180 6190 
	6200 6210 6220 6230 6240 6250 6260 6270 6280 6290 
	6300 6310 6320 6330 6340 6350 6360 6370 6380 6390 
	6400 6410 6420 6430 6440 6450 6460 6470 6480 6490 
	6500 6510 6520 6530 6540 6550 6560 6570 6580 6590 
	6600 6610 6620 6630 6640 6650 6660 6670 6680 6690 
	6700 6710 6720 6730 6740 6750 6760 6770 6780 6790 
	6800 6810 6820 6830 6840 6850 6860 6870 6880 6890 
	6900 6910 6920 6930 6940 6950 6960 6970 6980 6990 
	7000 7010 7020 7030 7040 7050 7060 7070 7080 7090 
	7100 7110 7120 7130 7140 7150 7160 7170 7180 7190 
	7200 ] def
/PSL_path_y [ 359 359 359 358 357 355 354 352 349 347 
	344 341 338 334 330 326 322 317 312 307 
	302 296 291 285 279 273 267 260 254 247 
	241 234 227 220 214 207 200 193 186 179 
	172 165 159 152 145 139 132 126 120 114 
	108 103 97 92 87 82 78 73 69 65 
	62 58 55 53 50 48 46 44 43 42 
	41 41 40 41 41 42 43 44 46 48 
	50 53 55 58 62 65 69 73 78 82 
	87 92 97 103 108 114 120 126 132 139 
	145 152 159 165 172 179 186 193 200 207 
	214 220 227 234 241 247 254 260 267 273 
	279 285 291 296 302 307 312 317 322 326 
	330 334 338 341 344 347 349 352 354 355 
	357 358 359 359 359 359 359 358 357 355 
	354 352 349 347 344 341 338 334 330 326 
	322 317 312 307 302 296 291 285 279 273 
	267 260 254 247 241 234 227 220 214 207 
	200 193 186 179 172 165 159 152 145 139 
	132 126 120 114 108 103 97 92 87 82 
	78 73 69 65 62 58 55 53 50 48 
	46 44 43 42 41 41 40 41 41 42 
	43 44 46 48 50 53 55 58 62 65 
	69 73 78 82 87 92 97 103 108 114 
	120 126 132 139 145 152 159 165 172 179 
	186 193 200 207 214 220 227 234 241 247 
	254 260 267 273 279 285 291 296 302 307 
	312 317 322 326 330 334 338 341 344 347 
	349 352 354 355 357 358 359 359 359 359 
	359 358 357 355 354 352 349 347 344 341 
	338 334 330 326 322 317 312 307 302 296 
	291 285 279 273 267 260 254 247 241 234 
	227 220 214 207 200 193 186 179 172 165 
	159 152 145 139 132 126 120 114 108 103 
	97 92 87 82 78 73 69 65 62 58 
	55 53 50 48 46 44 43 42 41 41 
	40 41 41 42 43 44 46 48 50 53 
	55 58 62 65 69 73 78 82 87 92 
	97 103 108 114 120 126 132 139 145 152 
	159 165 172 179 186 193 200 207 214 220 
	227 234 241 247 254 260 267 273 279 285 
	291 296 302 307 312 317 322 326 330 334 
	338 341 344 347 349 352 354 355 357 358 
	359 359 359 359 359 358 357 355 354 352 
	349 347 344 341 338 334 330 326 322 317 
	312 307 302 296 291 285 279 273 267 260 
	254 247 241 234 227 220 214 207 200 193 
	186 179 172 165 159 152 145 139 132 126 
	120 114 108 103 97 92 87 82 78 73 
	69 65 62 58 55 53 50 48 46 44 
	43 42 41 41 40 41 41 42 43 44 
	46 48 50 53 55 58 62 65 69 73 
	78 82 87 92 97 103 108 114 120 126 
	132 139 145 152 159 165 172 179 186 193 
	200 207 214 220 227 234 241 247 254 260 
	267 273 279 285 291 296 302 307 312 317 
	322 326 330 334 338 341 344 347 349 352 
	354 355 357 358 359 359 359 359 359 358 
	357 355 354 352 349 347 344 341 338 334 
	330 326 322 317 312 307 302 296 291 285 
	279 273 267 260 254 247 241 234 227 220 
	214 207 200 193 186 179 172 165 159 152 
	145 139 132 126 120 114 108 103 97 92 
	87 82 78 73 69 65 62 58 55 53 
	50 48 46 44 43 42 41 41 40 41 
	41 42 43 44 46 48 50 53 55 58 
	62 65 69 73 78 82 87 92 97 103 
	108 114 120 126 132 139 145 152 159 165 
	172 179 186 193 200 207 214 220 227 234 
	241 247 254 260 267 273 279 285 291 296 
	302 307 312 317 322 326 330 334 338 341 
	344 347 349 352 354 355 357 358 359 359 
	359 ] def
/PSL_path_n [ 721 ] def
/PSL_label_node [ 144 288 432 576 ] def
/PSL_label_n [ 4 ] def
/PSL_label_angle [ 1.28 1.28 1.28 1.28 ] def
/PSL_label_str [
	(wiggly line)
	(wiggly line)
	(wiggly line)
	(wiggly line)
] def
/PSL_label_n [ 4 ] def
/PSL_n_paths 1 def
/PSL_n_labels 4 def
PSL_set_label_heights
2 PSL_curved_path_labels
V
4 PSL_curved_path_labels
PSL_draw_path_lines N
PSL_cliprestore
U
[] 0 B
U
%%EndObject

grestore
PSL_movie_label_completion /PSL_movie_label_completion {} def
PSL_movie_prog_indicator_completion /PSL_movie_prog_indicator_completion {} def
%PSL_Begin_Trailer
%%PageTrailer
U
showpage

%%Trailer

end
%%EOF
