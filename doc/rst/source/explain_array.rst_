Generate 1D Array
-----------------

Make an evenly spaced coordinate array from *min* to *max* in steps of *inc*.
Append **+b** if we should take log2 of *min* and *max*, get their nearest integers, build an equidistant
log2-array using *inc* integer increments in log2, then undo the log2 conversion
(e.g., 3/20/1+b will yield 4,8,16).
Append **+l** if we should take log10 of *min* and *max* and build an
array where *inc* can be 1 (every magnitude), 2, (1, 2, 5 times magnitude) or 3
(1-9 times magnitude).  For less than every magnitude, use a negative integer *inc*.
Append **+n** if *inc* is meant to indicate the number of equidistant coordinates
instead.   Alternatively, give a *file* with output coordinates in the first column,
or provide a comma-separated *list* of coordinates.  If you only want a *single* value
then you must append a comma to distinguish the list from the setting of *inc*.

If the module allows you to set up an absolute time series, append a valid time unit from the list
**y**\ ear, m\ **o**\ nth, **w**\ eek, **d**\ ay, **h**\ our, **m**\ inute, and **s**\ econd
to the given increment; add **+t** to ensure time column (or use **-f**) Note: The internal time
unit is still controlled independently by :ref:`TIME_UNIT <TIME_UNIT>`.  Some modules allow for **+a**
which will paste the coordinate array to the output table.

Likewise, if the module allows you to set up a spatial distance series (with distance computed
from the first two data columns), specify the increment as *inc*\ [*unit*] with a
geospatial distance unit from the list
**d**\ egree (arc), **m**\ inute (arc), **s**\ econd (arc), m\ **e**\ ter, **f**\ oot, **k**\ ilometer,
**M**\ iles (statute), **n**\ autical miles, or s\ **u**\ rvey foot; see **-j** for calculation mode.
For Cartesian distances, you must use the special unit **c**.

Finally, if you are only providing an increment and obtain *min* and *max* from the data, then it is
possible (*max* - *min*)/*inc* is not an integer, as required.  If so then *inc* will be adjusted to accordingly.
Alternatively, append **+e** to keep *inc* exact and adjust *max* instead.
