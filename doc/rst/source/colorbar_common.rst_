|No-spaces|

Description
-----------

Plots gray scales or color scales on maps. Both horizontal
and vertical scales are supported. For CPTs with gradational
colors (i.e., the lower and upper boundary of an interval have different
colors) we will interpolate to give a continuous scale.
Variations in intensity due to shading/illumination may be displayed by
setting the option **-I**. Colors may be spaced according to a linear
scale, all be equal size, or by providing a file with individual tile
widths. The font used for the annotations along the scale and optional
units is specified by :term:`FONT_ANNOT_PRIMARY`.
If a label is requested, it is plotted with :term:`FONT_LABEL`.

Required Arguments
------------------

None.

Optional Arguments
------------------

.. _-B:

**-B**\ [**p**\|\ **s**]\ *parameters*
    Set annotation, tick, and gridline interval for the colorbar. The
    x-axis label will plot beneath a horizontal bar (or vertically to
    the right of a vertical bar), except when using the **+m** modifier of the **-D** option. As an
    option, use the y-axis label to plot the data unit to the right of a
    horizontal bar (and above a vertical bar). If **-B** is omitted, or no annotation intervals are
    provided (classic mode only), the default is to annotate every color level based on the
    numerical entries in the CPT (which may be overridden by ULB
    flags in the CPT). The exception to this rule is for CPT files that were scaled to fit the range
    of a grid exactly and thus have arbitrary color levels; these will trigger an automatic **-Baf** setting.
    To specify custom text annotations for
    intervals, you must append ;\ *annotation* to each z-slice in the CPT.
    For standard **-B** operations, see below.

.. include:: explain_-B.rst_

.. _-C:

**-C**\ [*cpt*]
    *cpt* is the CPT to be used. If no *cpt* is appended or no **-C** is given
    then we use the current CPT (modern mode only).  In classic mode, if no **-C**
    is given then we read stdin.  By default all
    color changes are annotated. To use a subset, add an extra column to
    the CPT with a L, U, or B to annotate Lower, Upper, or Both
    color segment boundaries (but see **-B**). Like :doc:`grdview`, we can understand
    pattern specifications in the CPT. For CPTs where the
    *z* range is in meters, it may be useful to change to another unit
    when plotting.  To do so, append **+U**\ *unit* to the file name.
    Likewise, if the CPT uses another unit than meter and you wish
    to plot the CPT versus meters, append **+u**\ *unit*.
    If a GMT master dynamic CPT is given instead then its *z*-range will
    be set to its default range (if it has one) before plotting.

.. _-D:

**-D**\ [**g**\|\ **j**\|\ **J**\|\ **n**\|\ **x**]\ *refpoint*\ [**+w**\ *length*\ [/\ *width*]]\ [**+e**\ [**b**\|\ **f**][*length*]][**+h**\|\ **v**][**+j**\ *justify*]\ [**+m**\ [**a**\|\ **c**\|\ **l**\|\ **u**]][**+n**\ [*txt*]][**+o**\ *dx*\ [/*dy*]]
    Defines the reference point on the map for the color scale using one of four coordinate systems:

    .. include:: explain_refpoint.rst_

    For **-Dj** or **-DJ** with codes TC, BC, ML, MR (i.e., centered on one of the map sides) we
    pre-calculate all further settings.  Specifically, the *length* is set to 80% of the map side,
    horizontal or vertical depends on the side, the offset is :term:`MAP_LABEL_OFFSET` for **Dj** with an
    extra offset :term:`MAP_FRAME_WIDTH` for **DJ**, and annotations are placed on the side of the scale facing
    away from the map frame.
    However, you can override any of these with these modifiers:
    Append **+w** followed by the *length* and *width* of the color bar.  If *width* is not
    specified then it is set to 4% of the given *length*.
    Give a negative *length* to reverse the scale bar. Append **+h** to get a
    horizontal scale [Default is vertical (**+v**)].
    By default, the anchor point on the scale is assumed to be the bottom left corner (BL), but this
    can be changed by appending **+j** followed by a 2-char justification code *justify* (see :doc:`text`).
    **Note**: If **-Dj** is used then *justify* defaults to the same as *refpoint*,
    if **-DJ** is used then *justify* defaults to the mirror opposite of *refpoint*. Consequently,
    **-DJ** is used to place a scale outside the map frame while **-Dj** is used to place it inside the frame.
    Add sidebar triangles for back- and/or foreground
    colors with **+e**. Append **f** (foreground) or **b** (background) for only one sidebar triangle [Default
    gives both]. Optionally, append triangle height [Default is half the barwidth].
    Move text to opposite side with **+m**\ [**a**\|\ **c**\|\ **l**\|\ **u**].
    Horizontal scale bars: Move annotations and labels above the scale bar [Default is below];
    the unit remains on the left.
    Vertical scale bars: Move annotations and labels to the left of the scale bar [Default is to the right];
    the unit remains below.
    Append one or more of **a**, **l** or **u** to control which of the annotations, label, and
    unit that will be moved to the opposite side. Append **c** if you want to print a
    vertical label as a column of characters (does not work with special characters).
    Append **+n** to plot a rectangle with the NaN color at
    the start of the bar, append *text* to change label from NaN.
    If not given, the default argument is JBC (Place color bar centered beneath current plot).

.. _-F:

**-F**\ [**+c**\ *clearances*][**+g**\ *fill*][**+i**\ [[*gap*/]\ *pen*]][**+p**\ [*pen*]][**+r**\ [*radius*]][**+s**\ [[*dx*/*dy*/][*shade*]]]
    Without further options, draws a rectangular border around the scale using
    :term:`MAP_FRAME_PEN`; specify a different pen with **+p**\ *pen*.
    Add **+g**\ *fill* to fill the scale panel [no fill].
    Append **+c**\ *clearance* where *clearance* is either *gap*, *xgap*\ /\ *ygap*,
    or *lgap*\ /\ *rgap*\ /\ *bgap*\ /\ *tgap* where these items are uniform, separate in
    x- and y-direction, or individual side spacings between scale and border.
    Append **+i** to draw a secondary, inner border as well. We use a uniform
    *gap* between borders of 2\ **p** and the :term:`MAP_DEFAULT_PEN`
    unless other values are specified. Append **+r** to draw rounded
    rectangular borders instead, with a 6\ **p** corner radius. You can
    override this radius by appending another value. Finally, append
    **+s** to draw an offset background shaded region. Here, *dx*/*dy*
    indicates the shift relative to the foreground frame
    [4\ **p**/-4\ **p**] and *shade* sets the fill style to use for shading [gray50].

.. _-G:

**-G**\ *zlo*\ /\ *zhi*
    Truncate the incoming CPT so that the lowest and highest z-levels
    are to *zlo* and *zhi*.  If one of these equal NaN then
    we leave that end of the CPT alone.  The truncation takes place
    before the plotting.

.. _-I:

**-I**\ [*max_intens*\|\ *low\_i*/*high_i*]
    Add illumination effects. Optionally, set the range of intensities
    from - to + *max\_intens*. If not specified, 1 is used.
    Alternatively, append *low/high* intensities to specify an
    asymmetric range [Default is no illumination].

.. _-J:

.. |Add_-J| unicode:: 0x20 .. just an invisible code
.. include:: explain_-J.rst_

.. _-L:

**-L**\ [**i**][*gap*]
    Gives equal-sized color rectangles. Default scales rectangles
    according to the z-range in the CPT (Also see **-Z**). If set,
    any equal interval annotation set with **-B** will be ignored. If
    *gap* is appended and the CPT is discrete we will center each
    annotation on each rectangle, using the lower boundary z-value for
    the annotation. If **i** is prepended we annotate the interval range
    instead. If **-I** is used then each rectangle will have its
    constant color modified by the specified intensity.

.. _-M:

**-M**
    Force a monochrome graybar using the (television) YIQ transformation.

.. _-N:

**-N**\ [**p**\|\ *dpi*]
    Controls how the color scale should be encoded graphically.
    To preferentially draw color rectangles (e.g., for discrete colors), append **p**.
    Otherwise we will preferentially draw images (e.g., for continuous colors).
    Optionally append effective dots-per-inch for rasterization of color scales [600].

.. _-Q:

**-Q**
    Select logarithmic scale and power of ten annotations. All z-values
    in the CPT will be converted to p = log10(z) and only integer p
    values will be annotated using the 10^p format [Default is linear scale].

.. _-R:

.. |Add_-Rgeo| unicode:: 0x20 .. just an invisible code
.. include:: explain_-Rgeo.rst_

.. |Add_-Rz| unicode:: 0x20 .. just an invisible code
.. include:: explain_-Rz.rst_

.. _-S:

**-S**
    Do not separate different color intervals with black grid lines.

.. _-U:

.. include:: explain_-U.rst_

.. _-V:

.. |Add_-V| unicode:: 0x20 .. just an invisible code
.. include:: explain_-V.rst_

.. _-W:

**-W**\ *scale*
    Multiply all *z*-values in the CPT by the provided *scale*.
    By default the CPT is used as is.

.. _-X:

.. include:: explain_-XY.rst_

.. _-Z:

**-Z**\ *zfile*
    File with colorbar-width per color entry. By default, width of entry
    is scaled to color range, i.e., z = 0-100 gives twice the width as z
    = 100-150 (Also see **-L**).

.. |Add_perspective| replace:: (Required **-R** and **-J** for proper functioning).
.. include:: explain_perspective.rst_

.. include:: explain_-t.rst_

.. include:: explain_help.rst_
